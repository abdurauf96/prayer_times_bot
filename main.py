from config import TOKEN,DB_NAME
import datetime
from telegram import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, ConversationHandler, Filters, MessageHandler
from helpers import DBHelper
from PIL import Image, ImageDraw, ImageFont





db=DBHelper(DB_NAME)

STATE_REGION=1
STATE_CALENDAR=2
TODAY,TOMORROW,REGIONS,DUO=('‚åõÔ∏è–ë—É–≥—É–Ω', '‚è≥ –≠—Ä—Ç–∞–≥–∞', 'üîÑ “≤—É–¥—É–¥–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à', 'ü§≤ –û“ì–∏–∑ –æ—á–∏—à,—ë–ø–∏—à –¥—É–æ—Å–∏')
user_region=dict()

main_buttons=ReplyKeyboardMarkup([
    [TODAY, TOMORROW],[REGIONS, DUO]
], resize_keyboard=True)


def region_buttons():
    regions = db.regions()
    br = []
    buttons = []

    for region in regions:
        br.append(InlineKeyboardButton(region['name'], callback_data=str(region['key_id'])))
        if len(br) == 2:
            buttons.append(br)
            br = []
    return buttons



def start(update, context):
    try:
        buttons=region_buttons()
        user = update.message.from_user
        user_region[user.id]=None
        update.message.reply_html('–ê—Å—Å–∞–ª–æ–º—É –∞–ª–∞–π–∫—É–º –≤–∞ —Ä–æ“≥–º–∞—Ç—É–ª–ª–æ“≥–∏ –≤–∞ –±–∞—Ä–æ–∫–∞—Ç—É“≥. \n \n '
                                  '–ê–ª–ª–æ“≥ —Ç–∞–æ–ª–æ “ö—É—Ä—ä–æ–Ω–∏ –∫–∞—Ä–∏–º–¥–∞ —à—É–Ω–¥–∞–π –º–∞—Ä“≥–∞–º–∞—Ç “õ–∏–ª–≥–∞–Ω:\n'
                                  '¬´–ê“≥–ª–∏–Ω–≥–∏–∑–Ω–∏ –Ω–∞–º–æ–∑ (—û“õ–∏—à)–≥–∞ –±—É—é—Ä–∏–Ω–≥ –≤–∞ (—û–∑–∏–Ω–≥–∏–∑ “≥–∞–º) —É–Ω–≥–∞ (–Ω–∞–º–æ–∑–≥–∞) –±–∞—Ä–¥–æ—à–ª–∏ –±—û–ª–∏–Ω–≥!¬ª (–¢–æ“≥–∞, 132).'
                                  ' \n \n –ú–∞—Ä“≥–∞–º–∞—Ç –∫–µ—Ä–∞–∫–ª–∏ “≥—É–¥—É–¥–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥!'
                                  .format(user.first_name), reply_markup=InlineKeyboardMarkup(buttons), parse_mode="HTML")
        return STATE_REGION
    except Exception as e:
        print(e)

def inline_callback(update, context):

    try:
        query=update.callback_query
        user_id=query.from_user.id
        user_region[user_id]=int(query.data)
        query.message.delete()
        region = db.getRegion(user_region[user_id])
        query.message.reply_html("–ù–∞–º–æ–∑ –≤–∞“õ—Ç–ª–∞—Ä–∏ <b> {} </b> uchun, “õ—É–π–∏–¥–∞–≥–∏–ª–∞—Ä–¥–∞–Ω –±–∏—Ä–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥!".format(region['name']), reply_markup=main_buttons)
        return STATE_CALENDAR

    except Exception as e:
        print(e)


def today(update, context):
    try:
        user_id = update.message.from_user.id
        if not user_region[user_id]:
            return  STATE_REGION
        region_id = user_region[user_id]
        region = db.getRegion(region_id)
        time = int(datetime.date.today().strftime("%d"))
        times = db.getDataByTime(region_id, time)
        image = Image.open('image.jpg')
        draw = ImageDraw.Draw(image)
        font_city = ImageFont.truetype("arial.ttf", 28)
        font = ImageFont.truetype("arial.ttf", 18)
        draw.text(xy=(500, 50), text="{} —à–∞“≥—Ä–∏".format(region['name']), fill=(57, 153, 82), font=font_city)
        draw.text(xy=(500, 120), text="–¢–æ–Ω–≥(–°–∞“≥–∞—Ä–ª–∏–∫):      {}".format(times['sahar']), fill=(57, 153, 82), font=font)
        draw.text(xy=(500, 160), text="“ö—É—ë—à:              {}".format(times['quyosh']), fill=(57, 153, 82), font=font)
        draw.text(xy=(500, 200), text="–ü–µ—à–∏–Ω:           {}".format(times['peshin']), fill=(57, 153, 82), font=font)
        draw.text(xy=(500, 240), text="–ê—Å—Ä:               {}".format(times['asr']), fill=(57, 153, 82), font=font)
        draw.text(xy=(500, 280), text="–®–æ–º(–ò—Ñ—Ç–æ—Ä):     {}".format(times['shom']), fill=(57, 153, 82), font=font)
        draw.text(xy=(500, 320), text="“≤—É—Ñ—Ç–æ–Ω:         {}".format(times['xufton']), fill=(57, 153, 82), font=font)

        image.save('vaqt.jpg')
        text = '<b>{} </b> —É—á—É–Ω –±—É–≥—É–Ω–≥–∏ –∫—É–Ω –Ω–∞–º–æ–∑ –≤–∞“õ—Ç–ª–∞—Ä–∏: \n \n<b>–¢–æ–Ω–≥:   </b>{} \n' \
               '<b>“ö—É—ë—à: </b> {} \n<b>–ü–µ—à–∏–Ω: </b> {} \n<b>–ê—Å—Ä: </b> {} \n<b>–®–æ–º: </b> {} \n<b>“≤—É—Ñ—Ç–æ–Ω: </b>{}' \
            .format(region['name'], times['sahar'], times['quyosh'], times['peshin'], times['asr'], times['shom'],
                    times['xufton'])

        update.message.reply_photo(photo=open('vaqt.jpg', 'rb'), caption=text, parse_mode="HTML")

    except Exception as e:
        print(e)

def tomorrow(update, context):
    try:

        user_id = update.message.from_user.id
        if not user_region[user_id]:
            return STATE_REGION
        region_id = user_region[user_id]
        region = db.getRegion(region_id)
        tomorrow= datetime.date.today() + datetime.timedelta(days=1)
        time=tomorrow.strftime("%d")
        times = db.getDataByTime(region_id, time)
        image = Image.open('image.jpg')
        draw = ImageDraw.Draw(image)
        font_city = ImageFont.truetype("arial.ttf", 28)
        font = ImageFont.truetype("arial.ttf", 18)
        draw.text(xy=(500, 50), text="{} —à–∞“≥—Ä–∏".format(region['name']), fill=(57, 153, 82), font=font_city)
        draw.text(xy=(500, 120), text="–¢–æ–Ω–≥(–°–∞“≥–∞—Ä–ª–∏–∫):            {}".format(times['sahar']), fill=(57, 153, 82), font=font)
        draw.text(xy=(500, 160), text="“ö—É—ë—à:           {}".format(times['quyosh']), fill=(57, 153, 82), font=font)
        draw.text(xy=(500, 200), text="–ü–µ—à–∏–Ω:        {}".format(times['peshin']), fill=(57, 153, 82), font=font)
        draw.text(xy=(500, 240), text="–ê—Å—Ä:             {}".format(times['asr']), fill=(57, 153, 82), font=font)
        draw.text(xy=(500, 280), text="–®–æ–º(–ò—Ñ—Ç–æ—Ä–ª–∏–∫):            {}".format(times['shom']), fill=(57, 153, 82), font=font)
        draw.text(xy=(500, 320), text="“≤—É—Ñ—Ç–æ–Ω:       {}".format(times['xufton']), fill=(57, 153, 82), font=font)

        image.save('vaqt.jpg')
        text = '<b>{} </b> —É—á—É–Ω —ç—Ä—Ç–∞–Ω–≥–∏ –∫—É–Ω –Ω–∞–º–æ–∑ –≤–∞“õ—Ç–ª–∞—Ä–∏: \n \n<b>–¢–æ–Ω–≥:   </b>{} \n' \
               '<b>“ö—É—ë—à: </b> {} \n<b>–ü–µ—à–∏–Ω: </b> {} \n<b>–ê—Å—Ä: </b> {} \n<b>–®–æ–º: </b> {} \n<b>“≤—É—Ñ—Ç–æ–Ω: </b>{}' \
            .format(region['name'], times['sahar'], times['quyosh'], times['peshin'], times['asr'], times['shom'],
                    times['xufton'])

        update.message.reply_photo(photo=open('vaqt.jpg', 'rb'), caption=text, parse_mode="HTML")
    except Exception as e:
        print(e)

def duo(update, context):
    text='<b>–°–∞“≥–∞—Ä–ª–∏–∫ (–æ“ì–∏–∑ —ë–ø–∏—à) –¥—É–æ—Å–∏:</b> \n–ù–∞–≤–∞–π—Ç—É –∞–Ω –∞—Å—É–º–∞ —Å–æ–≤–º–∞ —à–∞“≥—Ä–∏ –†–∞–º–∞–∑–æ–Ω–∞ –º–∏–Ω–∞–ª —Ñ–∞–∂—Ä–∏ –∏–ª–∞–ª –º–∞“ì—Ä–∏–±–∏, —Ö–æ–ª–∏—Å–∞–Ω –ª–∏–ª–ª–∞“≥–∏ —Ç–∞—ä–∞–ª–∞. \n\n' \
         '<b>–ò—Ñ—Ç–æ—Ä–ª–∏–∫ (–æ“ì–∏–∑ –æ—á–∏—à) –¥—É–æ—Å–∏:</b> \n–ê–ª–ª–æ“≥—É–º–º–∞ –ª–∞–∫–∞ —Å—É–º—Ç—É –≤–∞ –±–∏–∫–∞ –∞–º–∞–Ω—Ç—É –≤–∞ –∞—ä–∞–ª–∞–π–∫–∞ —Ç–∞–≤–∞–∫–∫–∞–ª—Ç—É –≤–∞ —ä–∞–ª–∞ —Ä–∏–∑“õ–∏–∫–∞ –∞—Ñ—Ç–∞—Ä—Ç—É, —Ñ–∞“ì—Ñ–∏—Ä–ª–∏, –π–∞ “í–æ—Ñ—Ñ–∞—Ä—É, –º–∞ “õ–æ–¥–¥–∞–º—Ç—É –≤–∞–º–∞ –∞—Ö—Ö–æ—Ä—Ç—É.'
    update.message.reply_photo(photo=open('duo.jpg', 'rb'), caption=text, parse_mode="HTML")

def regions(update, context):
    buttons=region_buttons()
    update.message.reply_text('–ö–µ—Ä–∞–∫–ª–∏ —Ö—É–¥—É–¥–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥', reply_markup=InlineKeyboardMarkup(buttons))
    return STATE_REGION


def main():
    #updater
    updater=Updater(TOKEN, use_context=True)

    #dispetcher
    dp=updater.dispatcher

    #dp.add_handler(CommandHandler('start', start))
    #dp.add_handler(CallbackQueryHandler(inline_callback))

    conv_handler=ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            STATE_REGION: [
                CallbackQueryHandler(inline_callback),
                MessageHandler(Filters.regex('^(' + TODAY + ')$'), today),
                MessageHandler(Filters.regex('^(' + TOMORROW + ')$'), tomorrow),
                MessageHandler(Filters.regex('^(' + REGIONS + ')$'), regions),
                MessageHandler(Filters.regex('^(' + DUO + ')$'), duo),
            ],

            STATE_CALENDAR: [
                MessageHandler(Filters.regex('^('+TODAY+')$'), today),
                MessageHandler(Filters.regex('^('+TOMORROW+')$'), tomorrow),
                MessageHandler(Filters.regex('^('+REGIONS+')$'), regions),
                MessageHandler(Filters.regex('^('+DUO+')$'), duo),
            ]
        },
        fallbacks=[CommandHandler('start', start)]
    )
    dp.add_handler(conv_handler)
    updater.start_polling()
    updater.idle()

main()